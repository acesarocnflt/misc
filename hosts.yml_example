---
all:
  vars:
    ansible_connection: ssh
    ansible_user: ubuntu
    ansible_become: true
    kafka_connect_confluent_hub_plugins:
      - confluentinc/kafka-connect-datagen:latest
    jmxexporter_enabled: true
    deployment_strategy: parallel

    ssl_enabled: true
    ssl_provided_keystore_and_truststore: true
    ssl_keystore_filepath: "/home/ubuntu/certs/ssl/{{inventory_hostname}}-keystore.jks"
    ssl_keystore_key_password: changeme
    ssl_keystore_store_password: changeme
    ssl_truststore_filepath: "/home/ubuntu/certs/ssl/kafka-truststore.jks"
    ssl_truststore_password: changeme

    sasl_protocol: plain
    sasl_plain_users:
      admin:
        principal: 'admin'
        password: 'admin-secret'
      schema_registry:
        principal: 'schema_registry'
        password: 'schema_registry-secret'
      kafka_connect:
        principal: 'kafka_connect'
        password: 'kafka_connect-secret'
      ksql:
        principal: 'ksql'
        password: 'ksql-secret'
      kafka_rest:
        principal: 'kafka_rest'
        password: 'kafka_rest-secret'
      control_center:
        principal: 'control_center'
        password: 'control_center-secret'
      kafka_connect_replicator:
        principal: 'kafka_connect_replicator'
        password: 'kafka_connect_replicator-secret'
      client:
        principal: 'client'
        password: 'client-secret'
      user1:
        principal: 'user1'
        password: my-secret
      user2:
        principal: 'user2'
        password: my-secret
      user3:
        principal: 'user3'
        password: my-secret

    kafka_broker_custom_properties:
      super.users: "User:kafka;User:schema_registry;User:user1;User:admin;User:kafka_connect;User:ksql;User:kafka-rest;User:control_center;User:kafka_connect_replicator;User:client;"
      authorizer.class.name: org.apache.kafka.metadata.authorizer.StandardAuthorizer #Authorizer class when using Kraft
      # authorizer.class.name: kafka.security.authorizer.AclAuthorizer #Authorizer class when using ZK
    kafka_controller_custom_properties:
      super.users: "User:kafka;User:schema_registry;User:user1;User:admin;User:kafka_connect;User:ksql;User:kafka-rest;User:control_center;User:kafka_connect_replicator;User:client;"
      authorizer.class.name: org.apache.kafka.metadata.authorizer.StandardAuthorizer #Authorizer class when using Kraft
      # authorizer.class.name: kafka.security.authorizer.AclAuthorizer #Authorizer class when using ZK
  

zookeeper:
    hosts:

kafka_controller:
    hosts:
        ip-172-30-1-85.eu-west-1.compute.internal:
            kafka_controller_custom_properties:
                broker.rack: eu-west-1a
        ip-172-30-2-228.eu-west-1.compute.internal:
            kafka_controller_custom_properties:
                broker.rack: eu-west-1b
        ip-172-30-3-128.eu-west-1.compute.internal:
            kafka_controller_custom_properties:
                broker.rack: eu-west-1c

kafka_broker:
    hosts:
        ip-172-30-1-30.eu-west-1.compute.internal:
            kafka_broker_custom_properties:
                broker.rack: eu-west-1a
        ip-172-30-1-56.eu-west-1.compute.internal:
            kafka_broker_custom_properties:
                broker.rack: eu-west-1a
        ip-172-30-2-222.eu-west-1.compute.internal:
            kafka_broker_custom_properties:
                broker.rack: eu-west-1b
        ip-172-30-3-190.eu-west-1.compute.internal:
            kafka_broker_custom_properties:
                broker.rack: eu-west-1c

kafka_connect:
    hosts:
        ip-172-30-1-37.eu-west-1.compute.internal:
        ip-172-30-2-138.eu-west-1.compute.internal:

schema_registry:
    hosts:
        ip-172-30-1-44.eu-west-1.compute.internal:
        ip-172-30-2-213.eu-west-1.compute.internal:

kafka_rest:
    hosts:

ksql:
    hosts:
        ip-172-30-1-65.eu-west-1.compute.internal:
        ip-172-30-2-201.eu-west-1.compute.internal:

control_center:
    hosts:
        ip-172-30-1-25.eu-west-1.compute.internal:
